import java.util.LinkedList;
import java.util.List;

import edu.princeton.cs.algs4.In;

class Node {
	Character value;
	Node next;
	
	Node()
	{
		
	}
	
	Node(Character i)
	{
		this.value=i;
	}
}
public class MoveToFront {
	
	private static List<Character> charList;
	
	MoveToFront()
	{
		charList = new LinkedList<Character>();
		for(int i=0;i<256;i++)
		{
			charList.add((char) i);
		}
	}

    // apply move-to-front encoding, reading from standard input and writing to standard output
    public static void encode()
    {
    	In in = new In("abra.txt");
    	while(in.hasNextChar())
    	{
    		Character temp =  in.readChar();
    		System.out.println(temp);
    		int count =0;
    		while(temp1.value!=temp &&temp1!=null)
    		{
    			temp1=temp1.next;
    			count++;
    		}
    		System.out.println(count);
    		
    	}
    	
    }

    // apply move-to-front decoding, reading from standard input and writing to standard output
    public static void decode()
    {
    	
    }

    // if args[0] is "-", apply move-to-front encoding
    // if args[0] is "+", apply move-to-front decoding
    public static void main(String[] args)
    {
    	MoveToFront obj = new MoveToFront();
    	obj.encode();
    }

}